plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.12'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id "org.liquibase.gradle" version "2.2.0"
}

group = 'com.tech.bee'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	mapstructVersion = "1.4.2.Final"
}

bootRun {
	systemProperty "spring.profiles.active", project.findProperty("spring.profiles.active") ?: "default"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
	implementation group: 'javax.persistence', name: 'javax.persistence-api'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation group: 'org.postgresql', name: 'postgresql'
	implementation group: 'org.apache.commons', name: 'commons-lang3'
	implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.0'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
	implementation group: 'org.zalando', name: 'logbook-spring-boot-starter', version: '3.4.0'
	implementation 'org.liquibase:liquibase-core:4.19.1'
	implementation 'org.springframework.boot:spring-boot-starter'
}

tasks.named('test') {
	useJUnitPlatform()
}

task generateChangeSetsFromDb(type: JavaExec) {
	main = 'liquibase.integration.commandline.Main'
	classpath = sourceSets.main.runtimeClasspath
	args "--url=jdbc:postgresql://localhost:5432/techbeeDb"
	args "--username=postgres"
	args "--password=admin12345"
	args "--driver=org.postgresql.Driver"
	args "--changeLogFile=src/main/resources/db/db.changelog-master.xml"
	args "generateChangeLog"
}
task generateSqlChangeSets(type: Exec) {
	dependsOn 'classes' // Ensure classes are compiled before generating SQL
		def activeProfiles = System.getProperty('spring.profiles.active')
		println "Active Profiles ======= ${activeProfiles}"
		def applicationProperties = new Properties()
		if (activeProfiles.contains('local')) {
			file('src/main/resources/application-local.yml').withInputStream { inputStream ->
				applicationProperties.load(inputStream)
			}
		}
		def changeLogFile = applicationProperties.getProperty('changeLogFile')
		def dataSourceUrl = applicationProperties.getProperty('url')
		def dataSourceUserName = applicationProperties.getProperty('username')
		def dataSourcePassword = applicationProperties.getProperty('password')
		println "=== Genetaing SQl changelog =="
		commandLine 'java', '-cp', sourceSets.main.runtimeClasspath.asPath,
				'liquibase.integration.commandline.Main',
				"--changeLogFile=${changeLogFile}", // Replace with your changelog file path
				"--url=${dataSourceUrl}",
				"--username=${dataSourceUserName}",
				"--password=${dataSourcePassword}",
				'--driver=org.postgresql.Driver',
				'updateSQL'
		workingDir project.projectDir
		println "=== SQl changelog generated =="
}
